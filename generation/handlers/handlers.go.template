// Package <@.context.package> is generated automatically by Sunplate toolkit.
// Please, do not edit it manually.
package <@.context.package>

import (
	"net/http"
	<@range $i, $v := .context.parents><@if $v.Import>
	<@$v.Package> "<@join $.context.outputImport $v.Import>"<@end><@end>
	contr "<@.context.import>"

	"github.com/anonx/sunplate/strconv"
)

// <@.context.name> is automatically generated from a controller
// that was found at "<@.context.import>/<@.context.file>".
//<@range $i, $v := .context.controller.Comments>
<@$v><@end>
type <@.context.name> struct {
}

// New allocates (<@.context.import>).<@.context.name> controller,
// initializes its parents; then returns.
func (t <@.context.name>) New() *contr.<@.context.name> {
	c := &contr.<@.context.name>{}
	<@range $i, $v := .context.parents >c.<@$v.Name> = <@$v.Package "."><@$v.Name>{}.New()
	<@end>return c
}

// <@.context.before> executes magic <@.context.before> actions of parent controllers<@if .context.controller.Before>
// and calls <@.context.before> action of (<@.context.import>).<@.context.name> with arguments
// that are extracted from r.Form and converted to appropriate type<@end>.
func (t <@.context.name>) <@.context.before>(c *contr.<@.context.name>, w http.ResponseWriter, r *http.Request) {
	// Execute magic <@.context.before> actions of parent controllers.
	<@range $i, $v := .context.parents><@$v.Package "."><@$v.Name>{}.Before(c.<@$v.Name>, w, r)
	<@end>
	<@if .context.controller.Before>// Call magic <@.context.before> action of (<@.context.import>).<@.context.name>.
	c.<@.context.controller.Before.Name>(<@range $i, $v := .context.controller.Before.Params>
		<@$.context.strconv.Render "strconv" "r.Form" $v>,<@end>
	)<@end>
}

func init() {
	_ = strconv.MeaningOfLife
}
